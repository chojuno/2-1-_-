#기온 데이터 불러오기
from urllib.request import urlopen, Request
import urllib
import bs4

#사는 위치, 나이, 성별 구분 입력
location, age, gen = input().split()
age1=int(age)

#인터넷에서 원하는 데이터 찾기
enc_location = urllib.parse.quote(location + '+날씨')
enc_particle = urllib.parse.quote(location + '+미세먼지')
enc_fparticle = urllib.parse.quote(location + '+초미세먼지')
enc_Mlocation = urllib.parse.quote(location + '+최고기온')
enc_mlocation = urllib.parse.quote(location + '+최저기온')
enc_UVlocation = urllib.parse.quote(location + '+ 날씨')

#각각의 데이터의 주소
url1 = 'https://search.naver.com/search.naver?ie=utf8&query='+ enc_location
url2 = 'https://search.naver.com/search.naver?ie=utf8&query='+ enc_particle
url3 = 'https://search.naver.com/search.naver?ie=utf8&query='+ enc_fparticle
url4 = 'https://search.naver.com/search.naver?ie=utf8&query='+ enc_Mlocation 
url5 = 'https://search.naver.com/search.naver?ie=utf8&query='+ enc_mlocation
url6 = 'https://search.naver.com/search.naver?ie=utf8&query='+ enc_UVlocation



req1 = Request(url1)
req2 = Request(url2)
req3 = Request(url3)
req4 = Request(url4)
req5 = Request(url5)
req6 = Request(url6)

page1 = urlopen(req1)
page2 = urlopen(req2)
page3 = urlopen(req3)
page4 = urlopen(req4)
page5 = urlopen(req5)
page6 = urlopen(req6)

html1 = page1.read()
html2 = page2.read()
html3 = page3.read()
html4 = page4.read()
html5 = page5.read()
html6 = page6.read()

soup1 = bs4.BeautifulSoup(html1,'html5lib')
soup2 = bs4.BeautifulSoup(html2,'html5lib')
soup3 = bs4.BeautifulSoup(html3,'html5lib')
soup4 = bs4.BeautifulSoup(html4,'html5lib')
soup5 = bs4.BeautifulSoup(html5,'html5lib')
soup6 = bs4.BeautifulSoup(html6,'html5lib')

#기온 데이터 출력
print('현재 ' + location + ' 날씨는 ' + soup1.find('p', class_='info_temperature').find('span', class_='todaytemp').text + '도 입니다.')
print('현재 ' + location + ' 미세먼지 농도는 ' + soup2.find('span', class_='figure').find('em', class_='main_figure').text + ' 입니다.')
print('현재 ' + location + ' 초미세먼지 농도는 ' + soup3.find('span', class_='figure').find('em', class_='main_figure').text + ' 입니다.')
print('현재 ' + location + ' 최고기온은' + soup4.find('span', class_='max').find('span', class_='num').text + '도 입니다')
print('현재 ' + location + ' 최저기온은' + soup5.find('span', class_='min').find('span', class_='num').text + '도 입니다')
print('현재 ' + location + ' 자외선지수는' + soup6.find('span', class_='indicator').find('span', class_='num').text + '입니다')

#반환값:최고기온= high ,최저기온=low ,미세먼지 농도=dust, 초미세먼지=fine dust,
#나이별 심각도 25;1;5(인구비율)
def age_num():
    if age1<=15:
        agenum = 0.866
    if 15<age1<=65:
        agenum = 0.033
    if age1>65:
        agenum = 0.166
    return agenum
def gen_num():
    if gen=='남자':
        gennum = 0.25
    else:
        gennum = 0.75

    return gennum


def temp():
    s1=1-0.066*(float(soup4.find('span', class_='min').find('span', class_='num').text) -float(soup5.find('span', class_='max').find('span', class_='num').text))
    return s1
 
def fine_dust():
    s2=1+0.016*(float(soup3.find('span', class_='figure').find('em', class_='main_figure').text))
    return s2
 
def dust():
    s3=1+0.011*(float(soup2.find('span', class_='figure').find('em', class_='main_figure').text))
    return s3
 
#자외선 지수가 UV_ray가 입력된다
def UV():
    if  int(soup6.find('span', class_='indicator').find('span', class_='num').text)<=2:
        print('햇빛위험도 낮음')
    if  2<int(soup6.find('span', class_='indicator').find('span', class_='num').text)<=5:
        print('60분 이상 햇빛 노출 자제')
    if 5< int(soup6.find('span', class_='indicator').find('span', class_='num').text)<=7:
       print( '50분 이상 햇빛 노출 자제')
    if 7<int(soup6.find('span', class_='indicator').find('span', class_='num').text)<=10:
        print('40분 이상 햇빛 노출 자제')
    if 10< int(soup6.find('span', class_='indicator').find('span', class_='num').text):
        print('30분 이상 햇빛 노출 자제')
    if age >= 65 and int(soup6.find('span', class_='indicator').find('span', class_='num').text)>2:
        print('되도록 외출을 삼가주시고, 자외선 차단제를 사용해주세요)
 
print('오늘 공기는 종합적으로 ',round(age_num()*gen_num()*(temp()*fine_dust()*dust() - 1)*100, 1), '% 더 심각하네요!')
print('오늘 미세먼지는 ',round(age_num()*gen_num()*(dust() - 1)*100,2), '% 더 심각하네요!')
print('오늘  초미세먼지는 ',round(age_num()*gen_num()*(fine_dust() - 1)*100,2), '% 더 심각하네요!')
print('오늘  일교차는 ',round(age_num()*gen_num()*(temp() - 1)*100,2), '% 더 심각하네요!')
UV()
  
#각 함수의 출력값은 위험도를 비율로 나타내며 각 세함수의 곱이 최종 심각도로 정의된다
